version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_prod
    hostname: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
      - ./postgres/config:/etc/postgresql:ro
    ports:
      - "127.0.0.1:5432:5432"  
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_root -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./backend
    container_name: fastapi_app
    hostname: fastapi
    restart: unless-stopped
    env_file: .env
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data: